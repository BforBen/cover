$text-color-base: #3b3b3b;
$text-color-heading: #262b30;
$text-color-content: #333332;
$text-color-quote: #888;
$text-color-cite: #bbb;

$font-weight-normal: 400;

$font-stack-content: 'Open Sans', sans-serif;
$font-stack-heading: Montserrat, sans-serif;
$font-stack-quote: 'Gentium Basic', serif;
$font-stack-code: 'Source Code Pro', monospace;

$link-color: #026ed2;
$link-color-hover: darken($link-color, 10%);
$link-border-color: #c3c2c9;

$button-background: #fff;
$button-border-color: #c3c2c9;
$button-color: #686868;
$button-color-hover: #fff;
$button-gray-background: #edebf3;
$button-gray-color: #858585;

$narrow: 500px;
$medium: 760px;
$wide: 1000px;

$facebook-color: #3b5998;
$twitter-color: #00acee;
$google-plus-color: #dd4b39;
$github-color: #000; // TODO

$divider-color: #b3b3b3;

@function parseInt($n) {
    @return $n / ($n * 0 + 1);
}

@mixin rem($property, $values) {
    $px : ();
    $rem: ();
    
    @each $value in $values {
        
        @if $value == 0 or $value == auto {
            $px : append($px , $value);
            $rem: append($rem, $value);
        }
        
        @else { 
            $unit: unit($value);
            $val: parseInt($value);
            
            @if $unit == "px" {
                $px : append($px,  $value);
                $rem: append($rem, ($val / 10 * 1rem));
            }
            
            @if $unit == "rem" {
                $px : append($px,  ($val * 10 * 1px));
                $rem: append($rem, $value);
            }
        }
    }
    
    #{$property}: $px;
    #{$property}: $rem;
}

@mixin border-radius($radius) {
    -webkit-border-radius: $radius;
    -moz-border-radius: $radius;
    -ms-border-radius: $radius;
    -o-border-radius: $radius;
    border-radius: $radius;
}

@mixin transition($val) {
    -webkit-transition: $val;
    -moz-transition: $val;
    -o-transition: $val;
    transition: $val;
}

@mixin transform($val) {
    -webkit-transform: $val;
    -moz-transform: $val;
    -o-transform: $val;
    transform: $val;
}

@mixin site-width($width: $medium) {
    width: 90%;
	max-width: $width;
    margin-left: auto;
    margin-right: auto;
}

@mixin background-gradient($color1, $color2) {
	background-image: -webkit-gradient(linear, 50% 0, 50% 100%, color-stop(0%, $color1), color-stop(100%, $color2));
	background-image: -webkit-linear-gradient($color1, $color2);
	background-image: -moz-linear-gradient($color1, $color2);
	background-image: -o-linear-gradient($color1, $color2);
	background-image: linear-gradient($color1, $color2);
}

@mixin box-shadow($val) {
  @each $prefix in -webkit-, -moz-, -o-, null {
    #{$prefix}box-shadow: $val;
  }
}

@mixin box-sizing($val) {
    -webkit-box-sizing: $val;
    -moz-box-sizing: $val;
    box-sizing: $val;
}

@mixin button {
    display: inline-block;
    padding: 7px 22px;
    font: 600 14px $font-stack-content;
    border: 2px solid $button-border-color;
    background: $button-background;
    color: $button-color;
    @include border-radius(4px);
    @include transition(all .2s ease-in-out);
    &:hover {
        border-color: $link-color;
        background: $link-color;
        color: $button-color-hover;    
    }
}

@mixin user-select($val) {
	-webkit-tap-highlight-color: rgba(0, 0, 0, 0);
	outline: 0;
	-webkit-touch-callout: $val;
	-webkit-user-select: $val;
	-khtml-user-select: $val;
	-moz-user-select: $val;
	-ms-user-select: $val;
	user-select: $val;
}